name: Build, test & publish

on:
  push:
    branches:
      - 'feature/**'

jobs:
  build_and_test:
    name: "Build e teste unitario"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build and Test
        run: ./gradlew clean build

  bdd:
    name: "Teste BDD"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Instalação do Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io

      - name: Instalação do Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Cria o container
        run: docker-compose build

      - name: Subindo o container
        run: docker-compose up -d

      - name: Aguardando até a aplicação subir
        run: sleep 30

      - name: Executa o cucumber
        run: ./gradlew cucumber

      - name: Stop do container
        run: docker-compose down

  sonar-analise:
    name: "Análise do SonarQube"
    runs-on: ubuntu-latest
    needs:
      - bdd
      - build_and_test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: SonarQube Análise
        run: ./gradlew sonarqube -Dsonar.token=${{ secrets.SONAR_TOKEN }}

  criacao-pr-develop:
    name: "Criação do PR para branch develop"
    runs-on: ubuntu-latest
    needs: sonar-analise

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install GitHub CLI
        run: sudo apt-get install gh

      - name: Configure Git
        run: |
          git config --global user.email "gtbarbosa@live.com"
          git config --global user.name "gustavo-dev"

      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Verificar se já existe PR aberto para develop
        id: check_pr
        run: |
          PR_EXISTS=$(gh pr list --base develop --head $(echo "${{ github.ref }}" | sed 's/refs\/heads\///') --json url --jq 'length')
          echo "PR_EXISTS=$PR_EXISTS" >> $GITHUB_ENV

      - name: Create Pull Request
        if: env.PR_EXISTS == '0'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH_NAME=$(echo "${{ github.ref }}" | sed 's/refs\/heads\///')
          gh pr create --base develop --head $BRANCH_NAME --title "PR da branch: $BRANCH_NAME para a branch develop" --body "PR criado automaticamente. From $BRANCH_NAME to develop."
